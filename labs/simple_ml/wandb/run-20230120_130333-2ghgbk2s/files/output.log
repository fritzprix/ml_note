/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loggers/wandb.py:396: UserWarning: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
  rank_zero_warn(
Found cached dataset wikitext (/home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126)
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 191.25it/s]
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-fa4a4a4c04b58af6.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-73a6c9a57c86a67d.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-18725908dcba4345.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-0815980a29664724.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-112469153db666a2.arrow
Found cached dataset wikitext (/home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126)
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 2370.11it/s]
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-29738f630967d57d.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-b79c4c83bb14680a.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-cd96fcca50ef7df6.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-f947132d80c6dcbb.arrow
Loading cached processed dataset at /home/fritzprix/.cache/huggingface/datasets/wikitext/wikitext-2-v1/1.0.0/a241db52902eaf2c6aa732210bead40c090019a499ceb13bcbfa3f8ab646a126/cache-1a59824c10f98229.arrow
GPU available: True (cuda), used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/setup.py:175: PossibleUserWarning: GPU available but not used. Set `accelerator` and `devices` using `Trainer(accelerator='gpu', devices=1)`.
  rank_zero_warn(
  | Name      | Type             | Params
-----------------------------------------------
0 | gru       | GRU              | 9.6 K
1 | fc        | Linear           | 3.1 K
2 | embedding | Embedding        | 81.2 K
3 | loss      | CrossEntropyLoss | 0
-----------------------------------------------
93.9 K    Trainable params
0         Non-trainable params
93.9 K    Total params
0.376     Total estimated model params size (MB)
Sanity Checking DataLoader 0:   0%|                                                                                    | 0/2 [00:00<?, ?it/s]torch.Size([40, 40])
Sanity Checking DataLoader 0:  50%|██████████████████████████████████████                                      | 1/2 [00:00<00:00, 37.65it/s]torch.Size([40, 40])
Epoch 0:   0%|                                                                                                       | 0/657 [00:00<?, ?it/s]train 0
[tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>)]
Epoch 0:   0%|                                                                           | 1/657 [00:03<40:50,  3.74s/it, loss=0, v_num=bk2s]train 1
[tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>)]
Epoch 0:   0%|▏                                                                          | 2/657 [00:06<37:55,  3.47s/it, loss=0, v_num=bk2s]train 2
[tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>)]
Epoch 0:   0%|▎                                                                          | 3/657 [00:10<37:19,  3.42s/it, loss=0, v_num=bk2s]train 3
[tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>), tensor(-0., grad_fn=<DivBackward1>)]
Process Process-29:
Process Process-18:
Process Process-25:
Process Process-19:
Process Process-22:
Process Process-20:
Process Process-9:
Process Process-2:
Process Process-28:
Process Process-32:
Process Process-15:
Process Process-16:
Process Process-6:
Process Process-30:
Process Process-12:
Process Process-3:
Process Process-13:
Process Process-14:
Process Process-1:
Process Process-26:
Process Process-31:
Process Process-5:
Process Process-23:
Process Process-7:
Process Process-27:
Process Process-10:
Process Process-24:
Process Process-11:
Process Process-8:
Process Process-4:
Process Process-17:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
KeyboardInterrupt
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1480, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py", line 207, in backward
    self.precision_plugin.backward(closure_loss, self.lightning_module, optimizer, optimizer_idx, *args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 69, in backward
    model.backward(tensor, optimizer, optimizer_idx, *args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/core/module.py", line 1406, in backward
    loss.backward(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/torch/_tensor.py", line 488, in backward
    torch.autograd.backward(
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/fritzprix/my_work/ml_note/labs/simple_ml/train.py", line 51, in <module>
    main(arg_parser.parse_args())
  File "/home/fritzprix/my_work/ml_note/labs/simple_ml/train.py", line 37, in main
    trainer.fit(model, train_dataloaders=train_dataloader, val_dataloaders=val_dataloader)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 603, in fit
    call._call_and_handle_interrupt(
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 38, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 645, in _fit_impl
    self._run(model, ckpt_path=self.ckpt_path)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1098, in _run
    results = self._run_stage()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1177, in _run_stage
    self._run_train()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1200, in _run_train
    self.fit_loop.run()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 267, in advance
    self._outputs = self.epoch_loop.run(self._data_fetcher)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/epoch/training_epoch_loop.py", line 214, in advance
    batch_output = self.batch_loop.run(kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/batch/training_batch_loop.py", line 88, in advance
    outputs = self.optimizer_loop.run(optimizers, kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 200, in advance
    result = self._run_optimization(kwargs, self._optimizers[self.optim_progress.optimizer_position])
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 247, in _run_optimization
    self._optimizer_step(optimizer, opt_idx, kwargs.get("batch_idx", 0), closure)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 357, in _optimizer_step
    self.trainer._call_lightning_module_hook(
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1342, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/core/module.py", line 1661, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/core/optimizer.py", line 169, in step
    step_output = self._strategy.optimizer_step(self._optimizer, self._optimizer_idx, closure, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py", line 234, in optimizer_step
    return self.precision_plugin.optimizer_step(
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 121, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/torch/optim/optimizer.py", line 140, in wrapper
    out = func(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/torch/optim/optimizer.py", line 23, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/torch/optim/adam.py", line 183, in step
    loss = closure()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 107, in _wrap_closure
    closure_result = closure()
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 147, in __call__
    self._result = self.closure(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 142, in closure
    self._backward_fn(step_output.closure_loss)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 303, in backward_fn
    self.trainer._call_strategy_hook("backward", loss, optimizer, opt_idx)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1480, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/fritzprix/miniconda3/envs/directml/lib/python3.10/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 810) exited unexpectedly with exit code 1. Details are lost due to multiprocessing. Rerunning with num_workers=0 may give better error trace.